package com.epamjavaweb.task7.task7130;
/*
Способ кодирования сообщений заключается в следующем: каждой букве русского алфавита мы ставим в соответствие
последовательность из 0 и 1 длины 6, которая есть запись в двоичной системе счисления порядкового номера буквы
русского алфавита. Если двоичная запись содержит меньше 6 нулей и единиц, то мы дописываем слева нули, чтобы
получилась последовательность длины 6. Например, буква «Я» имеет порядковый номер 33. Это число в двоичной
системе счисления равно 100001. Буква «Г» имеет порядковый номер 4, в двоичной системе счисления это 100.
Теперь дописываем слева нулями до 6 цифр, получаем последовательность 000100, которая будет соответствовать букве «Г».
Пробел между словами кодируется последовательностью 000000. Дальше делаем следующее: делим буквы на пары
(с начала сообщения), каждую букву сообщения по указанному правилу переводим в последовательность 0 и 1,
получаем двоичные числа (из 12 цифр), соответствующие каждой паре. Переводим эти числа в десятичную запись.
Полученная последовательность десятичных чисел будет представлять из себя зашифрованное послание. Зашифруйте таким
способом слово «СЕРВЕР». Ответ должен содержать три десятичных числа (первое – для пары букв СЕ, второе – для РВ,
третье – для ЕР). Зашифруйте произвольное сообщение.
 */

import java.util.ArrayList;
import java.util.List;

public class BinDecCoding {
    public static void main(String[] args) {
        String word = "СЕРВЕР";
        String abc = " АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ";
        List<String> binCod = new ArrayList<>();
        int numLetter1;
        String strBin;
        int j = 0;
        System.out.println("The initial messege " + "\"" + word + "\"");
        for (int i = 0; i < word.length(); i++) {
            numLetter1 = abc.indexOf(word.charAt(i));
            strBin = Integer.toBinaryString(numLetter1);
            if (strBin.length() < 6) {
                strBin = "000000" + strBin;
                strBin = strBin.substring(strBin.length() - 6);
            }
            if (i == 0 | (i % 2 == 0 & i != 1)) {
                binCod.add(strBin);
            } else {
                strBin = binCod.get(j) + strBin;
                binCod.add(j, strBin);
                binCod.remove(j + 1);
                j++;
            }
        }
        System.out.println("Encrypted message");
        for (String s : binCod) {
            System.out.printf("%d  ", Integer.parseInt(s, 2));
        }
    }



}
